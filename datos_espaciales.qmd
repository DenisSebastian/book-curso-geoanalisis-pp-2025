---
title: "Datos Espaciales"
subtitle: "Módulo 1: Práctico"
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(raster))
suppressPackageStartupMessages(library(mapview))
```

## Objetivos del Módulo

![Objetivos](images/m1_geoanalisis.png)

La presente Sesión tiene como objetivo principal introducir conceptos generales y manipulación básica de datos de tipo vectorial (punto, lineas, polígonos) y Raster, ambos con casos prácticos.


## Definición General de Datos Espaciales

La representación de un territorio requiere datos geográficos compuestos por información espacial (geometrías asociadas a una ubicación real en el mundo) e información de atributos (características y variables asociadas a estas geometrías). Los tipos de datos espaciales principalmente los vectores y raster.

![Capas de datos espaciales](images/capas_general.png){width=50%}



## Datos Vectoriales 

Datos Vectoriales
: Representación mediante coordenadas que se pueden unir espacialmente o no. Corresponde a 3 tipos de geometrías: puntos, líneas y  polígonos.

![](images/tipos_vect.png)
 


Fuente: [https://r-spatial.github.io/sf/articles/sf1.html](https://r-spatial.github.io/sf/articles/sf1.html)



Puntos
: Tiene un par de coordenadas "x" e "y". Es utilizado para información de tipo puntual, como por ejemplo equipamiento urbano, postes, árboles, entre otros.




![Objeto vectorial tipo punto](images/punto.png)

Cargar librerías
```{r}
# install.packages("sf") 
library(sf) # manipulación de datos vectoriales
library(mapview) # visualización de mapas dinámicos
library(ggplot2) # gráficos
library(RColorBrewer) #paleta de colores

```

### Lectura de archivos tipo puntos
```{r}
sii_LC <- st_read("data/sii/sii_urbe_LC.shp")
```

### Visualización de los puntos

```{r}
# Visualización ggplot y sf
ggplot() +
  geom_sf(data = sii_LC, col = "orange", alpha=0.8,  size= 0.5)+
  ggtitle("Datos del SII en Las Condes" ) +
  theme_bw() +
  theme(legend.position="none")+
  theme(panel.grid.major = element_line(colour = "gray80"), 
        panel.grid.minor = element_line(colour = "gray80"))
# mapview(sii_LC, zcol = "atractor", cex =2)
```


Líneas
: Tiene tantas coordenadas como vértices. La información que representa es de tipo lineal, como por ejemplo calles, ríos, redes energéticas, entre otros. Existen las líneas cerradas, las cuales se pueden entender como el perímetro de una superficie (sin relleno).

![Objeto vectorial tipo Línea](images/linea.png)

### Lectura de líneas
```{r}
las_condes_red <- readRDS("data/redes/RED_LAS_CONDES.rds") 
# las_condes_red

```

### visualización Líneas
```{r}

ggplot() +
  geom_sf(data = las_condes_red, col = "gray70", alpha=0.8,  size= 0.5)+
  ggtitle("Red víal de la comuna Las Condes" ) +
  theme_bw() +
  theme(legend.position="none")+
  theme(panel.grid.major = element_line(colour = "gray80"), 
        panel.grid.minor = element_line(colour = "gray80"))
# mapview(las_condes_red)
```


Polígonos
: Tiene tantas coordenadas como vértices. La información que representa es de tipo área, como por ejemplo división política administrativa, manzanas, construcciones, entre otras.

![Objeto vectorial tipo polígono](images/poligono.png)


### Lectura de polígonos

```{r}

las_condes_mz <- st_read("data/shape/icv_las_condes.shp", quiet=T) 
# las_condes_ptos

```

### Visualización polígonos

```{r}

ggplot() +
  geom_sf(data = las_condes_mz, aes(fill = veg_cob), color ="gray80", 
          alpha=0.8,  size= 0.1)+
  scale_fill_distiller(palette="Greens", direction = 1)+
  ggtitle("Cobertura Vegetal de la comuna Las Condes" ) +
  theme_bw() +
  theme(panel.grid.major = element_line(colour = "gray80"), 
        panel.grid.minor = element_line(colour = "gray80"))
# mapview(las_condes_mz, zcol = "veg_cob")
```


**Tabla General de tipo de Datos Vectoriales**

| type | description |
|-|-|
| POINT | zero-dimensional geometry containing a single point |
| LINESTRING | sequence of points connected by straight, non-self intersecting line pieces; one-dimensional geometry |
| POLYGON | geometry with a positive area (two-dimensional); sequence of points form a closed, non-self intersecting ring; the first ring denotes the exterior ring, zero or more subsequent rings denote holes in this exterior ring |
| MULTIPOINT | set of points; a MULTIPOINT is simple if no two Points in the MULTIPOINT are equal |
| MULTILINESTRING | set of linestrings |
| MULTIPOLYGON | set of polygons |
| GEOMETRYCOLLECTION | set of geometries of any type except GEOMETRYCOLLECTION |

![Capas de datos tipos raster y vectores](images/capas.png){width=70%}

## Datos Raster

Raster
: Representación del espacio mediante una matriz de celdas organizada  en filas y columnas, donde cada celda tiene un valor que representa información. 


![Representación Raster](images/raster_concept.png){width=60%}

![Resolución Raster](images/raster_resolucion.gif)


Para ejemplificar el uso y ver características de Raster vamos a utilizar una imágenes satelital del [Satelite Landsat 8](https://eos.com/es/find-satellite/landsat-8/).



![Imágenes Satelitales](images/Sentinel-2Poster.jpg)

Este tipos de imágenes satelitales generalmente contiene una series de de bandas que corresponden a capas de información tipos raster conformando una especie de brick de raster.

![Configuración de Bandas](images/3D-array.jpg)




Para este ejemplo de visualización necesitamos conocer las bandas satelitales que componen nuestra imagen satelital.



![Bandas de Landsat 8](images/bandas_landsat8.png)



### lectura de imagen Raster.

```{r}
library(raster)
las_condes_raster <- brick("data/raster/OLI_LC.tif")
names(las_condes_raster) <- c("aerosol", "blue", "green", "red" , "nir", "swir1", "swir2", "tirs1")
las_condes_raster

```

### Visualización Raster
```{r}
# Visualización de imagen recortada de Las Condes en Color Natural
plotRGB(las_condes_raster, r = 4, g = 3, b = 2, stretch = "lin")
# viewRGB(las_condes_raster, r = 4, g = 3, b = 2)
```


## Sistema de Referencias de Coordenadas



![Sistema de Referencias de Coordenadas](images/crs.png)

Los sistemas de coordenadas forman la base de cálculo para describir la posición de un punto a partir de mediciones geodésicas: distancias, proporciones de distancias (sin escala) y ángulos. Las coordenadas nunca pueden medirse, solamente se calculan con referencia un sistema de coordenadas bien definido. Los tipos de sistemas de coordenadas principales
que existen son:

Coordenadas elipsoidales
: son la representación de las coordenadas sobre la superficie de un elipsoide determinado, se representan por  [φ, λ, h] siendo respectivamente, la latitud, longitud y altura elipsoidal. 

![Coordenadas Geodésicas. Fuente: (Drewes & Sánchez, 2011)](images/geodesicas.png){width=60%}

Coordenadas proyectadas o cartográficas
: Según la proyección empleada las coordenadas elipsoidales pueden representarse en un plano, en el caso de Chile continental, se emplea la proyección Universal Transversal de Mercator (UTM), huso 19 y huso 18. 

![proyección Universal Transversal Mercator (UTM) Fuente: (Drewes & Sánchez,
2011)](images/utm.png){width=60%}



Para hacer reproyecciones en R, se le tiene que asignar el Sistema de Referencia de Coordenadas de dos formas, uno como cadena de texto (`"+proj=longlat +datum=WGS84 +no_defs"`) o como número que corresponde a EPSG ([EPSG es el acrónimo de European Petroleum Survey Group](https://mappinggis.com/2016/04/los-codigos-epsg-srid-vinculacion-postgis/)) que representan sistema de referencia de coordenadas también.


Para el caso de Chile usamos dos sistemas de referencias de coordenadas:

Coordenadas elipsoidales (geodésicas):
: 4326 o `"+proj=longlat +datum=WGS84 +no_defs"`

Coordenadas proyectadas (métricas):
: 32719 o `"+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs"` 

### Reproyectar Vectores

```{r}

LC_mz_32719 <- las_condes_mz %>% st_transform(32719)
st_crs(LC_mz_32719)

```



### Reproyectar Raster

```{r}
# las_condes_raster
crs_latlon <- "+proj=longlat +datum=WGS84 +no_defs"# geográficas o elipsoidales
crs_utm <- "+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs" # UTM o cartográficas
las_condes_raster2 <- projectRaster(from= las_condes_raster,                                             crs = crs_latlon)
las_condes_raster2
```



<!-- ## Actividades Prácticas -->


<!-- 1. Seleccione una comuna de las manzanas del INE, visualiza con ggplot. Además genere una tabla resumen de suma de personas, hombres, mujeres viviendas por Zona Censal. -->

<!-- :::{.callout-tip} -->

<!-- Leer Archivo: -->
<!-- ```{r eval=FALSE} -->
<!-- mz_ine <- readRDS("../data/censo/manz_INE_2017_sf.rds") -->
<!-- ``` -->

<!-- Seleccionar Comuna con `dplyr::filter()` -->

<!-- Eliminar geometrías `sf::st_drop_geometry()` ya que no es necesaria para realizar tabla resumen. -->

<!-- ::: -->



<!-- 2. Visualización de Combinación de Bandas Satelitales -->

<!-- :::{.callout-tip} -->
<!-- ![Visualización de Bandas](images/l8-band-combinations.png) -->
<!-- Referencias: [https://mappinggis.com/2019/05/combinaciones-de-bandas-en-imagenes-de-satelite-landsat-y-sentinel/](https://mappinggis.com/2019/05/combinaciones-de-bandas-en-imagenes-de-satelite-landsat-y-sentinel/) -->


<!-- ```{r eval=FALSE} -->
<!-- plotRGB(las_condes_raster, r = 7, g = 6, b = 4, stretch = "lin") -->
<!-- ``` -->

<!-- ::: -->



## Referencias


[Geodesia en Chile, teoría y aplicación
del Sistema de Referencia
Geocéntrico para las Américas
(SIRGAS) - 2018](https://www.ide.cl/descargas/Geodesia-en-Chile.pdf)

[Simple Features for R](https://r-spatial.github.io/sf/)
